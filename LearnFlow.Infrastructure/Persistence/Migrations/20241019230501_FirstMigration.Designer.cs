// <auto-generated />
using System;
using LearnFlow.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearnFlow.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20241019230501_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LearnFlow.Core.Entities.Assinatura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Assinaturas");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.Aula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<string>("LinkVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModuloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuloId");

                    b.ToTable("Aulas");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssinaturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cover")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssinaturaId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.Modulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.PagamentoAssinatura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataProcessamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternoPagamentoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusPagamento")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAssinaturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioAssinaturaId")
                        .IsUnique();

                    b.ToTable("PagamentoAssinaturas");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneCelular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.UsuarioAssinatura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssinaturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PagamentoAssinaturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatusAssinatura")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssinaturaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioAssinaturas");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.UsuarioAulaConcluida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AulaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("usuarioAulaConcluidas");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.Aula", b =>
                {
                    b.HasOne("LearnFlow.Core.Entities.Modulo", "Modulo")
                        .WithMany("Aulas")
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.Curso", b =>
                {
                    b.HasOne("LearnFlow.Core.Entities.Assinatura", "Assinatura")
                        .WithMany("Cursos")
                        .HasForeignKey("AssinaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assinatura");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.Modulo", b =>
                {
                    b.HasOne("LearnFlow.Core.Entities.Curso", "Curso")
                        .WithMany("Modulos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.PagamentoAssinatura", b =>
                {
                    b.HasOne("LearnFlow.Core.Entities.UsuarioAssinatura", "UsuarioAssinatura")
                        .WithOne("PagamentoAssinatura")
                        .HasForeignKey("LearnFlow.Core.Entities.PagamentoAssinatura", "UsuarioAssinaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioAssinatura");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.UsuarioAssinatura", b =>
                {
                    b.HasOne("LearnFlow.Core.Entities.Assinatura", "Assinatura")
                        .WithMany()
                        .HasForeignKey("AssinaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearnFlow.Core.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioAssinaturas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assinatura");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.UsuarioAulaConcluida", b =>
                {
                    b.HasOne("LearnFlow.Core.Entities.Aula", "Aula")
                        .WithMany("UsuarioAulaConcluida")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearnFlow.Core.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioAulaConcluidas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aula");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.Assinatura", b =>
                {
                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.Aula", b =>
                {
                    b.Navigation("UsuarioAulaConcluida");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.Curso", b =>
                {
                    b.Navigation("Modulos");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.Modulo", b =>
                {
                    b.Navigation("Aulas");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.Usuario", b =>
                {
                    b.Navigation("UsuarioAssinaturas");

                    b.Navigation("UsuarioAulaConcluidas");
                });

            modelBuilder.Entity("LearnFlow.Core.Entities.UsuarioAssinatura", b =>
                {
                    b.Navigation("PagamentoAssinatura")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
